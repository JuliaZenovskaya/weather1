{
  "{\"sourceRoot\":\"C:\\\\Users\\\\Jully\\\\weatherlab1\\\\test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Jully\\\\weatherlab1\",\"filename\":\"C:\\\\Users\\\\Jully\\\\weatherlab1\\\\test\\\\test.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Jully\\\\weatherlab1\",\"plugins\":[],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Jully\\weatherlab1\\test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Jully\\weatherlab1",
      "filename": "C:\\Users\\Jully\\weatherlab1\\test\\test.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Jully\\weatherlab1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Jully\\weatherlab1\\test\\test.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Jully\\weatherlab1\\test\\test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Jully\\weatherlab1\\test",
        "sourceFileName": "test.js"
      }
    },
    "ast": null,
    "code": "const {\n  extractForecast,\n  extractErrorMessage,\n  getWeather\n} = require('../script');\n\ndescribe('Request', () => {\n  it('check when city exists', () => {\n    const city = 'Moscow';\n    const exp = 200;\n    const json = getWeather(city);\n    assert.equal(json.cod, exp);\n  });\n  it('check when city does not exist', () => {\n    const city = 'hhh';\n    const exp = 404;\n    const json = getWeather(city);\n    assert.equal(json.cod, exp);\n  });\n});\ndescribe('Getting data from response', () => {\n  it('get from response with existing city', () => {\n    const response = {\n      \"coord\": {\n        \"lon\": 37.62,\n        \"lat\": 55.75\n      },\n      \"weather\": [{\n        \"id\": 701,\n        \"main\": \"Mist\",\n        \"description\": \"mist\",\n        \"icon\": \"50n\"\n      }],\n      \"base\": \"stations\",\n      \"main\": {\n        \"temp\": 4.38,\n        \"pressure\": 1015,\n        \"humidity\": 100,\n        \"temp_min\": 2,\n        \"temp_max\": 5.56\n      },\n      \"visibility\": 3000,\n      \"wind\": {\n        \"speed\": 4,\n        \"deg\": 90\n      },\n      \"clouds\": {\n        \"all\": 90\n      },\n      \"dt\": 1573170827,\n      \"sys\": {\n        \"type\": 1,\n        \"id\": 9027,\n        \"country\": \"RU\",\n        \"sunrise\": 1573188558,\n        \"sunset\": 1573220232\n      },\n      \"timezone\": 10800,\n      \"id\": 524901,\n      \"name\": \"Moscow\",\n      \"cod\": 200\n    };\n    const exp = {\n      cod: 200,\n      city: \"Weather in Moscow\",\n      description: \" is mist\",\n      parameters: [{\n        name: \"Temperature\",\n        value: 4.38,\n        units: \"&deg;C\"\n      }, {\n        name: \"Pressure\",\n        value: 1015,\n        units: \"hPa\"\n      }, {\n        name: \"Wind speed\",\n        value: 4,\n        units: \"m/s\"\n      }, {\n        name: \"Humidity\",\n        value: 100,\n        units: \"%\"\n      }, {\n        name: \"Clouds\",\n        value: 90,\n        units: \"%\"\n      }, {\n        name: \"Visibility\",\n        value: 3000,\n        units: \"m\"\n      }]\n    };\n    const real = extractForecast(response);\n    assert.equal(real, exp);\n  });\n  it('get from response with not existing city', () => {\n    const response = {\n      \"cod\": \"404\",\n      \"message\": \"city not found\"\n    };\n    const exp = {\n      \"message\": \"city not found\"\n    };\n    const real = extractErrorMessage(response);\n    assert.equal(real, exp);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QuanMiXSwibmFtZXMiOlsiZXh0cmFjdEZvcmVjYXN0IiwiZXh0cmFjdEVycm9yTWVzc2FnZSIsImdldFdlYXRoZXIiLCJyZXF1aXJlIiwiZGVzY3JpYmUiLCJpdCIsImNpdHkiLCJleHAiLCJqc29uIiwiYXNzZXJ0IiwiZXF1YWwiLCJjb2QiLCJyZXNwb25zZSIsImRlc2NyaXB0aW9uIiwicGFyYW1ldGVycyIsIm5hbWUiLCJ2YWx1ZSIsInVuaXRzIiwicmVhbCJdLCJtYXBwaW5ncyI6IkFBQ0EsTUFBTTtBQUFFQSxFQUFBQSxlQUFGO0FBQW1CQyxFQUFBQSxtQkFBbkI7QUFBd0NDLEVBQUFBO0FBQXhDLElBQXVEQyxPQUFPLENBQUMsV0FBRCxDQUFwRTs7QUFFQUMsUUFBUSxDQUFDLFNBQUQsRUFBWSxNQUFNO0FBQ3hCQyxFQUFBQSxFQUFFLENBQUMsd0JBQUQsRUFBMkIsTUFBTTtBQUNqQyxVQUFNQyxJQUFJLEdBQUcsUUFBYjtBQUNBLFVBQU1DLEdBQUcsR0FBRyxHQUFaO0FBQ0EsVUFBTUMsSUFBSSxHQUFHTixVQUFVLENBQUNJLElBQUQsQ0FBdkI7QUFDQUcsSUFBQUEsTUFBTSxDQUFDQyxLQUFQLENBQWFGLElBQUksQ0FBQ0csR0FBbEIsRUFBdUJKLEdBQXZCO0FBQ0MsR0FMRCxDQUFGO0FBT0FGLEVBQUFBLEVBQUUsQ0FBRSxnQ0FBRixFQUFvQyxNQUFNO0FBQzFDLFVBQU1DLElBQUksR0FBRyxLQUFiO0FBQ0EsVUFBTUMsR0FBRyxHQUFFLEdBQVg7QUFDQSxVQUFNQyxJQUFJLEdBQUdOLFVBQVUsQ0FBQ0ksSUFBRCxDQUF2QjtBQUNBRyxJQUFBQSxNQUFNLENBQUNDLEtBQVAsQ0FBYUYsSUFBSSxDQUFDRyxHQUFsQixFQUF1QkosR0FBdkI7QUFDRCxHQUxDLENBQUY7QUFNRCxDQWRPLENBQVI7QUFnQkFILFFBQVEsQ0FBQyw0QkFBRCxFQUErQixNQUFNO0FBQzNDQyxFQUFBQSxFQUFFLENBQUMsc0NBQUQsRUFBeUMsTUFBTTtBQUMvQyxVQUFNTyxRQUFRLEdBQUc7QUFDZixlQUFRO0FBQUMsZUFBTSxLQUFQO0FBQWEsZUFBTTtBQUFuQixPQURPO0FBRWYsaUJBQVUsQ0FBQztBQUFDLGNBQUssR0FBTjtBQUFVLGdCQUFPLE1BQWpCO0FBQXdCLHVCQUFjLE1BQXRDO0FBQTZDLGdCQUFPO0FBQXBELE9BQUQsQ0FGSztBQUdmLGNBQU8sVUFIUTtBQUlmLGNBQU87QUFBQyxnQkFBTyxJQUFSO0FBQWEsb0JBQVcsSUFBeEI7QUFBNkIsb0JBQVcsR0FBeEM7QUFBNEMsb0JBQVcsQ0FBdkQ7QUFBeUQsb0JBQVc7QUFBcEUsT0FKUTtBQUtmLG9CQUFhLElBTEU7QUFNZixjQUFPO0FBQUMsaUJBQVEsQ0FBVDtBQUFXLGVBQU07QUFBakIsT0FOUTtBQU9mLGdCQUFTO0FBQUMsZUFBTTtBQUFQLE9BUE07QUFRZixZQUFLLFVBUlU7QUFTZixhQUFNO0FBQUMsZ0JBQU8sQ0FBUjtBQUFVLGNBQUssSUFBZjtBQUFvQixtQkFBVSxJQUE5QjtBQUFtQyxtQkFBVSxVQUE3QztBQUF3RCxrQkFBUztBQUFqRSxPQVRTO0FBVWYsa0JBQVcsS0FWSTtBQVdmLFlBQUssTUFYVTtBQVlmLGNBQU8sUUFaUTtBQWFmLGFBQU07QUFiUyxLQUFqQjtBQWVBLFVBQU1MLEdBQUcsR0FDVDtBQUNJSSxNQUFBQSxHQUFHLEVBQUUsR0FEVDtBQUVJTCxNQUFBQSxJQUFJLEVBQUUsbUJBRlY7QUFHSU8sTUFBQUEsV0FBVyxFQUFFLFVBSGpCO0FBSUlDLE1BQUFBLFVBQVUsRUFDTixDQUNJO0FBQ0lDLFFBQUFBLElBQUksRUFBRSxhQURWO0FBRUlDLFFBQUFBLEtBQUssRUFBRSxJQUZYO0FBR0lDLFFBQUFBLEtBQUssRUFBRTtBQUhYLE9BREosRUFNSTtBQUNJRixRQUFBQSxJQUFJLEVBQUUsVUFEVjtBQUVJQyxRQUFBQSxLQUFLLEVBQUUsSUFGWDtBQUdJQyxRQUFBQSxLQUFLLEVBQUU7QUFIWCxPQU5KLEVBV0k7QUFDSUYsUUFBQUEsSUFBSSxFQUFFLFlBRFY7QUFFSUMsUUFBQUEsS0FBSyxFQUFFLENBRlg7QUFHSUMsUUFBQUEsS0FBSyxFQUFFO0FBSFgsT0FYSixFQWdCSTtBQUNJRixRQUFBQSxJQUFJLEVBQUUsVUFEVjtBQUVJQyxRQUFBQSxLQUFLLEVBQUUsR0FGWDtBQUdJQyxRQUFBQSxLQUFLLEVBQUU7QUFIWCxPQWhCSixFQXFCSTtBQUNJRixRQUFBQSxJQUFJLEVBQUUsUUFEVjtBQUVJQyxRQUFBQSxLQUFLLEVBQUUsRUFGWDtBQUdJQyxRQUFBQSxLQUFLLEVBQUU7QUFIWCxPQXJCSixFQTBCSTtBQUNJRixRQUFBQSxJQUFJLEVBQUUsWUFEVjtBQUVJQyxRQUFBQSxLQUFLLEVBQUUsSUFGWDtBQUdJQyxRQUFBQSxLQUFLLEVBQUU7QUFIWCxPQTFCSjtBQUxSLEtBREE7QUF5Q0EsVUFBTUMsSUFBSSxHQUFHbEIsZUFBZSxDQUFDWSxRQUFELENBQTVCO0FBQ0FILElBQUFBLE1BQU0sQ0FBQ0MsS0FBUCxDQUFhUSxJQUFiLEVBQW1CWCxHQUFuQjtBQUNELEdBM0RDLENBQUY7QUE2REFGLEVBQUFBLEVBQUUsQ0FBQywwQ0FBRCxFQUE2QyxNQUFNO0FBQ25ELFVBQU1PLFFBQVEsR0FBRztBQUNmLGFBQU0sS0FEUztBQUVmLGlCQUFVO0FBRkssS0FBakI7QUFJQSxVQUFNTCxHQUFHLEdBQUc7QUFDVixpQkFBVTtBQURBLEtBQVo7QUFHQSxVQUFNVyxJQUFJLEdBQUdqQixtQkFBbUIsQ0FBQ1csUUFBRCxDQUFoQztBQUNBSCxJQUFBQSxNQUFNLENBQUNDLEtBQVAsQ0FBYVEsSUFBYixFQUFtQlgsR0FBbkI7QUFDRCxHQVZDLENBQUY7QUFXRCxDQXpFTyxDQUFSIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcSnVsbHlcXHdlYXRoZXJsYWIxXFx0ZXN0Iiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmNvbnN0IHsgZXh0cmFjdEZvcmVjYXN0LCBleHRyYWN0RXJyb3JNZXNzYWdlLCBnZXRXZWF0aGVyIH0gPSByZXF1aXJlKCcuLi9zY3JpcHQnKTtcclxuXHJcbmRlc2NyaWJlKCdSZXF1ZXN0JywgKCkgPT4ge1xyXG4gIGl0KCdjaGVjayB3aGVuIGNpdHkgZXhpc3RzJywgKCkgPT4ge1xyXG4gICAgY29uc3QgY2l0eSA9ICdNb3Njb3cnO1xyXG4gICAgY29uc3QgZXhwID0gMjAwO1xyXG4gICAgY29uc3QganNvbiA9IGdldFdlYXRoZXIoY2l0eSk7XHJcbiAgICBhc3NlcnQuZXF1YWwoanNvbi5jb2QsIGV4cCk7XHJcbiAgICB9KTtcclxuXHJcbiAgaXQgKCdjaGVjayB3aGVuIGNpdHkgZG9lcyBub3QgZXhpc3QnLCAoKSA9PiB7XHJcbiAgICBjb25zdCBjaXR5ID0gJ2hoaCc7XHJcbiAgICBjb25zdCBleHA9IDQwNDtcclxuICAgIGNvbnN0IGpzb24gPSBnZXRXZWF0aGVyKGNpdHkpO1xyXG4gICAgYXNzZXJ0LmVxdWFsKGpzb24uY29kLCBleHApO1xyXG4gIH0pO1xyXG59KTtcclxuXHJcbmRlc2NyaWJlKCdHZXR0aW5nIGRhdGEgZnJvbSByZXNwb25zZScsICgpID0+IHtcclxuICBpdCgnZ2V0IGZyb20gcmVzcG9uc2Ugd2l0aCBleGlzdGluZyBjaXR5JywgKCkgPT4ge1xyXG4gICAgY29uc3QgcmVzcG9uc2UgPSB7XHJcbiAgICAgIFwiY29vcmRcIjp7XCJsb25cIjozNy42MixcImxhdFwiOjU1Ljc1fSxcclxuICAgICAgXCJ3ZWF0aGVyXCI6W3tcImlkXCI6NzAxLFwibWFpblwiOlwiTWlzdFwiLFwiZGVzY3JpcHRpb25cIjpcIm1pc3RcIixcImljb25cIjpcIjUwblwifV0sXHJcbiAgICAgIFwiYmFzZVwiOlwic3RhdGlvbnNcIixcclxuICAgICAgXCJtYWluXCI6e1widGVtcFwiOjQuMzgsXCJwcmVzc3VyZVwiOjEwMTUsXCJodW1pZGl0eVwiOjEwMCxcInRlbXBfbWluXCI6MixcInRlbXBfbWF4XCI6NS41Nn0sXHJcbiAgICAgIFwidmlzaWJpbGl0eVwiOjMwMDAsXHJcbiAgICAgIFwid2luZFwiOntcInNwZWVkXCI6NCxcImRlZ1wiOjkwfSxcclxuICAgICAgXCJjbG91ZHNcIjp7XCJhbGxcIjo5MH0sXHJcbiAgICAgIFwiZHRcIjoxNTczMTcwODI3LFxyXG4gICAgICBcInN5c1wiOntcInR5cGVcIjoxLFwiaWRcIjo5MDI3LFwiY291bnRyeVwiOlwiUlVcIixcInN1bnJpc2VcIjoxNTczMTg4NTU4LFwic3Vuc2V0XCI6MTU3MzIyMDIzMn0sXHJcbiAgICAgIFwidGltZXpvbmVcIjoxMDgwMCxcclxuICAgICAgXCJpZFwiOjUyNDkwMSxcclxuICAgICAgXCJuYW1lXCI6XCJNb3Njb3dcIixcclxuICAgICAgXCJjb2RcIjoyMDBcclxuICAgIH07XHJcbiAgICBjb25zdCBleHAgPVxyXG4gICAge1xyXG4gICAgICAgIGNvZDogMjAwLFxyXG4gICAgICAgIGNpdHk6IFwiV2VhdGhlciBpbiBNb3Njb3dcIixcclxuICAgICAgICBkZXNjcmlwdGlvbjogXCIgaXMgbWlzdFwiLFxyXG4gICAgICAgIHBhcmFtZXRlcnM6XHJcbiAgICAgICAgICAgIFtcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIlRlbXBlcmF0dXJlXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IDQuMzgsXHJcbiAgICAgICAgICAgICAgICAgICAgdW5pdHM6IFwiJmRlZztDXCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJQcmVzc3VyZVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiAxMDE1LFxyXG4gICAgICAgICAgICAgICAgICAgIHVuaXRzOiBcImhQYVwiLFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIldpbmQgc3BlZWRcIixcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogNCxcclxuICAgICAgICAgICAgICAgICAgICB1bml0czogXCJtL3NcIixcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJIdW1pZGl0eVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiAxMDAsXHJcbiAgICAgICAgICAgICAgICAgICAgdW5pdHM6IFwiJVwiLFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkNsb3Vkc1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiA5MCxcclxuICAgICAgICAgICAgICAgICAgICB1bml0czogXCIlXCIsXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiVmlzaWJpbGl0eVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiAzMDAwLFxyXG4gICAgICAgICAgICAgICAgICAgIHVuaXRzOiBcIm1cIixcclxuICAgICAgICAgICAgICAgIH0sXHJcblxyXG4gICAgICAgICAgICBdLFxyXG4gICAgfTtcclxuXHJcbiAgICBjb25zdCByZWFsID0gZXh0cmFjdEZvcmVjYXN0KHJlc3BvbnNlKTtcclxuICAgIGFzc2VydC5lcXVhbChyZWFsLCBleHApO1xyXG4gIH0pO1xyXG5cclxuICBpdCgnZ2V0IGZyb20gcmVzcG9uc2Ugd2l0aCBub3QgZXhpc3RpbmcgY2l0eScsICgpID0+IHtcclxuICAgIGNvbnN0IHJlc3BvbnNlID0ge1xyXG4gICAgICBcImNvZFwiOlwiNDA0XCIsXHJcbiAgICAgIFwibWVzc2FnZVwiOlwiY2l0eSBub3QgZm91bmRcIlxyXG4gICAgfTtcclxuICAgIGNvbnN0IGV4cCA9IHtcclxuICAgICAgXCJtZXNzYWdlXCI6XCJjaXR5IG5vdCBmb3VuZFwiXHJcbiAgICB9O1xyXG4gICAgY29uc3QgcmVhbCA9IGV4dHJhY3RFcnJvck1lc3NhZ2UocmVzcG9uc2UpO1xyXG4gICAgYXNzZXJ0LmVxdWFsKHJlYWwsIGV4cCk7XHJcbiAgfSk7XHJcbn0pO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "test.js"
      ],
      "names": [
        "extractForecast",
        "extractErrorMessage",
        "getWeather",
        "require",
        "describe",
        "it",
        "city",
        "exp",
        "json",
        "assert",
        "equal",
        "cod",
        "response",
        "description",
        "parameters",
        "name",
        "value",
        "units",
        "real"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Jully\\weatherlab1\\test",
      "sourcesContent": [
        "\r\nconst { extractForecast, extractErrorMessage, getWeather } = require('../script');\r\n\r\ndescribe('Request', () => {\r\n  it('check when city exists', () => {\r\n    const city = 'Moscow';\r\n    const exp = 200;\r\n    const json = getWeather(city);\r\n    assert.equal(json.cod, exp);\r\n    });\r\n\r\n  it ('check when city does not exist', () => {\r\n    const city = 'hhh';\r\n    const exp= 404;\r\n    const json = getWeather(city);\r\n    assert.equal(json.cod, exp);\r\n  });\r\n});\r\n\r\ndescribe('Getting data from response', () => {\r\n  it('get from response with existing city', () => {\r\n    const response = {\r\n      \"coord\":{\"lon\":37.62,\"lat\":55.75},\r\n      \"weather\":[{\"id\":701,\"main\":\"Mist\",\"description\":\"mist\",\"icon\":\"50n\"}],\r\n      \"base\":\"stations\",\r\n      \"main\":{\"temp\":4.38,\"pressure\":1015,\"humidity\":100,\"temp_min\":2,\"temp_max\":5.56},\r\n      \"visibility\":3000,\r\n      \"wind\":{\"speed\":4,\"deg\":90},\r\n      \"clouds\":{\"all\":90},\r\n      \"dt\":1573170827,\r\n      \"sys\":{\"type\":1,\"id\":9027,\"country\":\"RU\",\"sunrise\":1573188558,\"sunset\":1573220232},\r\n      \"timezone\":10800,\r\n      \"id\":524901,\r\n      \"name\":\"Moscow\",\r\n      \"cod\":200\r\n    };\r\n    const exp =\r\n    {\r\n        cod: 200,\r\n        city: \"Weather in Moscow\",\r\n        description: \" is mist\",\r\n        parameters:\r\n            [\r\n                {\r\n                    name: \"Temperature\",\r\n                    value: 4.38,\r\n                    units: \"&deg;C\"\r\n                },\r\n                {\r\n                    name: \"Pressure\",\r\n                    value: 1015,\r\n                    units: \"hPa\",\r\n                },\r\n                {\r\n                    name: \"Wind speed\",\r\n                    value: 4,\r\n                    units: \"m/s\",\r\n                },\r\n                {\r\n                    name: \"Humidity\",\r\n                    value: 100,\r\n                    units: \"%\",\r\n                },\r\n                {\r\n                    name: \"Clouds\",\r\n                    value: 90,\r\n                    units: \"%\",\r\n                },\r\n                {\r\n                    name: \"Visibility\",\r\n                    value: 3000,\r\n                    units: \"m\",\r\n                },\r\n\r\n            ],\r\n    };\r\n\r\n    const real = extractForecast(response);\r\n    assert.equal(real, exp);\r\n  });\r\n\r\n  it('get from response with not existing city', () => {\r\n    const response = {\r\n      \"cod\":\"404\",\r\n      \"message\":\"city not found\"\r\n    };\r\n    const exp = {\r\n      \"message\":\"city not found\"\r\n    };\r\n    const real = extractErrorMessage(response);\r\n    assert.equal(real, exp);\r\n  });\r\n});\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1574014189891
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Jully\\\\weatherlab1\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Jully\\\\weatherlab1\",\"filename\":\"C:\\\\Users\\\\Jully\\\\weatherlab1\\\\script.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Jully\\\\weatherlab1\",\"plugins\":[],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Jully\\weatherlab1",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Jully\\weatherlab1",
      "filename": "C:\\Users\\Jully\\weatherlab1\\script.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Jully\\weatherlab1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Jully\\weatherlab1\\script.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Jully\\weatherlab1\\script.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Jully\\weatherlab1",
        "sourceFileName": "script.js"
      }
    },
    "ast": null,
    "code": "const WEATHER = document.getElementById(\"weather-container\");\nconst ERROR = document.getElementById(\"error-container\");\n\nwindow.onload = () => {\n  const input = document.getElementById(\"input-form\");\n  input.addEventListener(\"submit\", onSubmit);\n};\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  const city = e.currentTarget.elements.inputfield.value;\n  getWeather(city).then(response => {\n    response.json().then(json => {\n      if (response.ok) {\n        const forecast = extractForecast(json);\n        displayWeather(forecast);\n        displayErrorMessage(null);\n      } else {\n        const error = extractErrorMessage(json.message);\n        displayErrorMessage(error);\n        displayWeather(null);\n      }\n    });\n  }, error => displayErrorMessage(error));\n}\n\nfunction getWeather(city) {\n  const url = \"https://api.openweathermap.org/data/2.5/weather?q=\" + city + \"&appid=e972dcd233bab1ebce419c370711921f&units=metric&lang=en\";\n  return fetch(url);\n}\n\nfunction extractForecast(json) {\n  const {\n    name: city,\n    main: {\n      temp: temperature,\n      pressure,\n      humidity\n    } = {},\n    wind: {\n      speed: wind\n    } = {},\n    clouds: {\n      all: clouds\n    } = {},\n    visibility: visibility,\n    cod: cod\n  } = json;\n  let forecast = {\n    cod: cod,\n    city: \"Weather in \" + city,\n    description: \" is \" + json.weather[0].description,\n    parameters: [{\n      name: \"Temperature\",\n      value: temperature,\n      units: \"&deg;C\"\n    }, {\n      name: \"Pressure\",\n      value: pressure,\n      units: \"hPa\"\n    }, {\n      name: \"Wind speed\",\n      value: wind,\n      units: \"m/s\"\n    }, {\n      name: \"Humidity\",\n      value: humidity,\n      units: \"%\"\n    }, {\n      name: \"Clouds\",\n      value: clouds,\n      units: \"%\"\n    }, {\n      name: \"Visibility\",\n      value: visibility,\n      units: \"m\"\n    }]\n  };\n  return forecast;\n}\n\nfunction extractErrorMessage(error) {\n  let message = {\n    message: error\n  };\n  return message;\n}\n\nfunction displayWeather(forecast) {\n  let source = document.getElementById(\"weather-template\").innerHTML;\n  let template = Handlebars.compile(source);\n  let html = template(forecast);\n  document.getElementById(\"weather-container\").innerHTML = html;\n}\n\nfunction displayErrorMessage(message) {\n  let source = document.getElementById(\"message-template\").innerHTML;\n  let template = Handlebars.compile(source);\n  let html = template(message);\n  document.getElementById(\"message-container\").innerHTML = html;\n}\n\nexports.extractForecast = extractForecast;\nexports.extractErrorMessage = extractErrorMessage;\nexports.getWeather = getWeather;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "script.js"
      ],
      "names": [
        "WEATHER",
        "document",
        "getElementById",
        "ERROR",
        "window",
        "onload",
        "input",
        "addEventListener",
        "onSubmit",
        "e",
        "preventDefault",
        "city",
        "currentTarget",
        "elements",
        "inputfield",
        "value",
        "getWeather",
        "then",
        "response",
        "json",
        "ok",
        "forecast",
        "extractForecast",
        "displayWeather",
        "displayErrorMessage",
        "error",
        "extractErrorMessage",
        "message",
        "url",
        "fetch",
        "name",
        "main",
        "temp",
        "temperature",
        "pressure",
        "humidity",
        "wind",
        "speed",
        "clouds",
        "all",
        "visibility",
        "cod",
        "description",
        "weather",
        "parameters",
        "units",
        "source",
        "innerHTML",
        "template",
        "Handlebars",
        "compile",
        "html",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Jully\\weatherlab1",
      "sourcesContent": [
        "\r\n\r\nconst WEATHER = document.getElementById(\"weather-container\");\r\nconst ERROR = document.getElementById(\"error-container\");\r\n\r\nwindow.onload = () => {\r\n    const input = document.getElementById(\"input-form\");\r\n    input.addEventListener(\"submit\", onSubmit);\r\n};\r\n\r\nfunction onSubmit(e) {\r\n    e.preventDefault();\r\n    const city = e.currentTarget.elements.inputfield.value;\r\n    getWeather(city)\r\n        .then(response => {\r\n            response.json()\r\n            .then(json => {\r\n                if (response.ok) {\r\n                    const forecast = extractForecast(json);\r\n                    displayWeather(forecast);\r\n                    displayErrorMessage(null);\r\n                } else {\r\n                    const error = extractErrorMessage(json.message);\r\n                    displayErrorMessage(error);\r\n                    displayWeather(null);\r\n                }\r\n            });\r\n        },\r\n        error => displayErrorMessage(error));\r\n}\r\n\r\nfunction getWeather(city) {\r\n    const url = \"https://api.openweathermap.org/data/2.5/weather?q=\"\r\n        + city +\r\n        \"&appid=e972dcd233bab1ebce419c370711921f&units=metric&lang=en\";\r\n    return fetch(url);\r\n}\r\n\r\nfunction extractForecast(json) {\r\n    const {\r\n        name: city,\r\n        main:\r\n        {\r\n            temp: temperature,\r\n            pressure,\r\n            humidity,\r\n        } = {},\r\n        wind:\r\n        {\r\n            speed: wind,\r\n        } = {},\r\n        clouds:\r\n        {\r\n            all: clouds,\r\n        } = {},\r\n        visibility: visibility,\r\n        cod: cod,\r\n    } = json;\r\n\r\n    let forecast =\r\n    {\r\n        cod: cod,\r\n        city: \"Weather in \" + city,\r\n        description: \" is \" + json.weather[0].description,\r\n        parameters:\r\n            [\r\n                {\r\n                    name: \"Temperature\",\r\n                    value: temperature,\r\n                    units: \"&deg;C\"\r\n                },\r\n                {\r\n                    name: \"Pressure\",\r\n                    value: pressure,\r\n                    units: \"hPa\",\r\n                },\r\n                {\r\n                    name: \"Wind speed\",\r\n                    value: wind,\r\n                    units: \"m/s\",\r\n                },\r\n                {\r\n                    name: \"Humidity\",\r\n                    value: humidity,\r\n                    units: \"%\",\r\n                },\r\n                {\r\n                    name: \"Clouds\",\r\n                    value: clouds,\r\n                    units: \"%\",\r\n                },\r\n                {\r\n                    name: \"Visibility\",\r\n                    value: visibility,\r\n                    units: \"m\",\r\n                },\r\n\r\n            ],\r\n    };\r\n\r\n    return forecast;\r\n}\r\n\r\nfunction extractErrorMessage(error) {\r\n  let message = {\r\n    message: error,\r\n  }\r\n\r\n  return message;\r\n}\r\n\r\nfunction displayWeather(forecast) {\r\n    let source = document.getElementById(\"weather-template\").innerHTML;\r\n    let template = Handlebars.compile(source);\r\n\r\n    let html = template(forecast);\r\n    document.getElementById(\"weather-container\").innerHTML = html;\r\n}\r\n\r\n\r\nfunction displayErrorMessage(message) {\r\n  let source = document.getElementById(\"message-template\").innerHTML;\r\n  let template = Handlebars.compile(source);\r\n\r\n  let html = template(message);\r\n  document.getElementById(\"message-container\").innerHTML = html;\r\n}\r\n\r\nexports.extractForecast = extractForecast;\r\nexports.extractErrorMessage = extractErrorMessage;\r\nexports.getWeather = getWeather;\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1574011289365
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Jully\\\\weatherlab1\\\\test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Jully\\\\weatherlab1\",\"filename\":\"C:\\\\Users\\\\Jully\\\\weatherlab1\\\\test\\\\test.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Jully\\\\weatherlab1\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Jully\\weatherlab1\\test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Jully\\weatherlab1",
      "filename": "C:\\Users\\Jully\\weatherlab1\\test\\test.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Jully\\weatherlab1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Jully\\weatherlab1\\test\\test.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Jully\\weatherlab1\\test\\test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Jully\\weatherlab1\\test",
        "sourceFileName": "test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _require = require('chai'),\n    expect = _require.expect,\n    assert = _require.assert;\n\nvar _require2 = require('../scripts/work'),\n    extractForecast = _require2.extractForecast,\n    extractErrorMessage = _require2.extractErrorMessage,\n    getWeather = _require2.getWeather;\n\ndescribe('Correct request status', function () {\n  it('request with correct city', function () {\n    var city = \"Moscow\";\n    getWeather(city).then(function (response) {\n      try {\n        expect(response.ok).to.be[\"true\"];\n      } catch (error) {\n        console.log(\"First test 'request with correct city' crashed: \");\n        console.log(\"Message: \" + error.message);\n        console.log(\"Actual: \" + error.actual);\n        console.log(\"Expected: \" + error.expected);\n      }\n    });\n  });\n  it('request with not correct city', function () {\n    var city = \"Mosco\";\n    getWeather(city).then(function (response) {\n      try {\n        expect(response.ok).to.be[\"false\"];\n      } catch (error) {\n        console.log(\"Second test 'request with not correct city' crashed: \");\n        console.log(\"Message: \" + error.message);\n        console.log(\"Actual: \" + error.actual);\n        console.log(\"Expected: \" + error.expected);\n      }\n    });\n  });\n});\ndescribe('Getting data from response', function () {\n  var response = {\n    \"coord\": {\n      \"lon\": 37.62,\n      \"lat\": 55.75\n    },\n    \"weather\": [{\n      \"id\": 701,\n      \"main\": \"Mist\",\n      \"description\": \"mist\",\n      \"icon\": \"50n\"\n    }],\n    \"base\": \"stations\",\n    \"main\": {\n      \"temp\": 4.38,\n      \"pressure\": 1015,\n      \"humidity\": 100,\n      \"temp_min\": 2,\n      \"temp_max\": 5.56\n    },\n    \"visibility\": 3000,\n    \"wind\": {\n      \"speed\": 4,\n      \"deg\": 90\n    },\n    \"clouds\": {\n      \"all\": 90\n    },\n    \"dt\": 1573170827,\n    \"sys\": {\n      \"type\": 1,\n      \"id\": 9027,\n      \"country\": \"RU\",\n      \"sunrise\": 1573188558,\n      \"sunset\": 1573220232\n    },\n    \"timezone\": 10800,\n    \"id\": 524901,\n    \"name\": \"Moscow\",\n    \"cod\": 200\n  };\n  it('get from response with existing city', function () {\n    var exp = {\n      cod: 200,\n      city: \"Weather in Moscow\",\n      description: \" is mist\",\n      parameters: [{\n        name: \"Temperature\",\n        value: 4.38,\n        units: \"&deg;C\"\n      }, {\n        name: \"Pressure\",\n        value: 1015,\n        units: \"hPa\"\n      }, {\n        name: \"Wind speed\",\n        value: 4,\n        units: \"m/s\"\n      }, {\n        name: \"Humidity\",\n        value: 100,\n        units: \"%\"\n      }, {\n        name: \"Clouds\",\n        value: 90,\n        units: \"%\"\n      }, {\n        name: \"Visibility\",\n        value: 3000,\n        units: \"m\"\n      }]\n    };\n    var real = extractForecast(response);\n    expect(real).to.eql(exp);\n  });\n  it('get from response with not existing city', function () {\n    var response = \"city not found\";\n    var exp = {\n      \"message\": \"city not found\"\n    };\n    var real = extractErrorMessage(response);\n    expect(real).to.eql(exp);\n  });\n  it(\"6 elements from response with existing city\", function () {\n    var elements = 6;\n    var forecast = extractForecast(response);\n    var len = 0;\n    forecast.parameters.forEach(function (parameter) {\n      len = len + 1;\n    });\n    expect(len).to.eql(elements);\n  });\n  it(\"elements from response contains 'name', 'value', 'units'\", function () {\n    var forecast = extractForecast(response);\n    forecast.parameters.forEach(function (parameter) {\n      expect(parameter).to.be.an('object').that.have.property(\"name\");\n      expect(parameter).to.be.an('object').that.have.property(\"value\");\n      expect(parameter).to.be.an('object').that.have.property(\"units\");\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "test.js"
      ],
      "names": [
        "require",
        "expect",
        "assert",
        "extractForecast",
        "extractErrorMessage",
        "getWeather",
        "describe",
        "it",
        "city",
        "then",
        "response",
        "ok",
        "to",
        "be",
        "error",
        "console",
        "log",
        "message",
        "actual",
        "expected",
        "exp",
        "cod",
        "description",
        "parameters",
        "name",
        "value",
        "units",
        "real",
        "eql",
        "elements",
        "forecast",
        "len",
        "forEach",
        "parameter",
        "an",
        "that",
        "have",
        "property"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Jully\\weatherlab1\\test",
      "sourcesContent": [
        "const { expect, assert } = require('chai');\r\nconst { extractForecast, extractErrorMessage, getWeather } = require('../scripts/work');\r\n\r\ndescribe('Correct request status', () => {\r\n  it('request with correct city', () => {\r\n    const city = \"Moscow\";\r\n    getWeather(city)\r\n        .then(response => {\r\n          try {\r\n            expect(response.ok).to.be.true;\r\n          } catch (error) {\r\n            console.log(\"First test 'request with correct city' crashed: \");\r\n            console.log(\"Message: \" + error.message);\r\n            console.log(\"Actual: \" + error.actual);\r\n            console.log(\"Expected: \" + error.expected);\r\n          }\r\n        });\r\n  });\r\n  it('request with not correct city', () => {\r\n    const city = \"Mosco\";\r\n    getWeather(city)\r\n        .then(response => {\r\n          try {\r\n            expect(response.ok).to.be.false;\r\n          } catch (error) {\r\n            console.log(\"Second test 'request with not correct city' crashed: \");\r\n            console.log(\"Message: \" + error.message);\r\n            console.log(\"Actual: \" + error.actual);\r\n            console.log(\"Expected: \" + error.expected);\r\n          }\r\n        });\r\n  });\r\n});\r\n\r\ndescribe('Getting data from response', () => {\r\n  const response = {\r\n    \"coord\":{\"lon\":37.62,\"lat\":55.75},\r\n    \"weather\":[{\"id\":701,\"main\":\"Mist\",\"description\":\"mist\",\"icon\":\"50n\"}],\r\n    \"base\":\"stations\",\r\n    \"main\":{\"temp\":4.38,\"pressure\":1015,\"humidity\":100,\"temp_min\":2,\"temp_max\":5.56},\r\n    \"visibility\":3000,\r\n    \"wind\":{\"speed\":4,\"deg\":90},\r\n    \"clouds\":{\"all\":90},\r\n    \"dt\":1573170827,\r\n    \"sys\":{\"type\":1,\"id\":9027,\"country\":\"RU\",\"sunrise\":1573188558,\"sunset\":1573220232},\r\n    \"timezone\":10800,\r\n    \"id\":524901,\r\n    \"name\":\"Moscow\",\r\n    \"cod\":200\r\n  };\r\n\r\n  it('get from response with existing city', () => {\r\n    const exp =\r\n    {\r\n        cod: 200,\r\n        city: \"Weather in Moscow\",\r\n        description: \" is mist\",\r\n        parameters:\r\n            [\r\n                {\r\n                    name: \"Temperature\",\r\n                    value: 4.38,\r\n                    units: \"&deg;C\"\r\n                },\r\n                {\r\n                    name: \"Pressure\",\r\n                    value: 1015,\r\n                    units: \"hPa\",\r\n                },\r\n                {\r\n                    name: \"Wind speed\",\r\n                    value: 4,\r\n                    units: \"m/s\",\r\n                },\r\n                {\r\n                    name: \"Humidity\",\r\n                    value: 100,\r\n                    units: \"%\",\r\n                },\r\n                {\r\n                    name: \"Clouds\",\r\n                    value: 90,\r\n                    units: \"%\",\r\n                },\r\n                {\r\n                    name: \"Visibility\",\r\n                    value: 3000,\r\n                    units: \"m\",\r\n                },\r\n\r\n            ],\r\n    };\r\n\r\n    const real = extractForecast(response);\r\n    expect(real).to.eql(exp);\r\n  });\r\n\r\n  it('get from response with not existing city', () => {\r\n    const response = \"city not found\";\r\n    const exp = {\r\n      \"message\":\"city not found\"\r\n    };\r\n    const real = extractErrorMessage(response);\r\n    expect(real).to.eql(exp);\r\n  });\r\n\r\n  it(\"6 elements from response with existing city\", function() {\r\n    const elements = 6;\r\n    const forecast = extractForecast(response);\r\n    let len = 0;\r\n    forecast.parameters.forEach(parameter => {\r\n      len = len + 1;\r\n    });\r\n    expect(len).to.eql(elements);\r\n  });\r\n\r\n  it(\"elements from response contains 'name', 'value', 'units'\", function() {\r\n    const forecast = extractForecast(response);\r\n    forecast.parameters.forEach(parameter => {\r\n      expect(parameter).to.be.an('object').that.have.property(\"name\");\r\n      expect(parameter).to.be.an('object').that.have.property(\"value\");\r\n      expect(parameter).to.be.an('object').that.have.property(\"units\");\r\n    });\r\n  });\r\n});\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574028583326
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Jully\\\\weatherlab1\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Jully\\\\weatherlab1\",\"filename\":\"C:\\\\Users\\\\Jully\\\\weatherlab1\\\\script.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Jully\\\\weatherlab1\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Jully\\weatherlab1",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Jully\\weatherlab1",
      "filename": "C:\\Users\\Jully\\weatherlab1\\script.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Jully\\weatherlab1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Jully\\weatherlab1\\script.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Jully\\weatherlab1\\script.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Jully\\weatherlab1",
        "sourceFileName": "script.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nwindow.onload = function () {\n  var input = document.getElementById(\"input-form\");\n  input.addEventListener(\"submit\", onSubmit);\n};\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  var city = e.currentTarget.elements.inputfield.value;\n  getWeather(city).then(function (response) {\n    response.json().then(function (json) {\n      if (response.ok) {\n        var forecast = extractForecast(json);\n        displayWeather(forecast);\n        displayErrorMessage(null);\n      } else {\n        var error = extractErrorMessage(json.message); //displayErrorMessage(error);\n        //displayWeather(null);\n      }\n    });\n  }, function (error) {\n    return displayErrorMessage(error);\n  });\n}\n\nfunction getWeather(city) {\n  var url = \"https://api.openweathermap.org/data/2.5/weather?q=\" + city + \"&appid=e972dcd233bab1ebce419c370711921f&units=metric&lang=en\";\n  return fetch(url);\n}\n\nfunction extractForecast(json) {\n  var city = json.name,\n      _json$main = json.main;\n  _json$main = _json$main === void 0 ? {} : _json$main;\n  var temperature = _json$main.temp,\n      pressure = _json$main.pressure,\n      humidity = _json$main.humidity,\n      _json$wind = json.wind;\n  _json$wind = _json$wind === void 0 ? {} : _json$wind;\n  var wind = _json$wind.speed,\n      _json$clouds = json.clouds;\n  _json$clouds = _json$clouds === void 0 ? {} : _json$clouds;\n  var clouds = _json$clouds.all,\n      visibility = json.visibility,\n      cod = json.cod;\n  var forecast = {\n    cod: cod,\n    city: \"Weather in \" + city,\n    description: \" is \" + json.weather[0].description,\n    parameters: [{\n      name: \"Temperature\",\n      value: temperature,\n      units: \"&deg;C\"\n    }, {\n      name: \"Pressure\",\n      value: pressure,\n      units: \"hPa\"\n    }, {\n      name: \"Wind speed\",\n      value: wind,\n      units: \"m/s\"\n    }, {\n      name: \"Humidity\",\n      value: humidity,\n      units: \"%\"\n    }, {\n      name: \"Clouds\",\n      value: clouds,\n      units: \"%\"\n    }, {\n      name: \"Visibility\",\n      value: visibility,\n      units: \"m\"\n    }]\n  };\n  return forecast;\n}\n\nfunction extractErrorMessage(error) {\n  var message = {\n    message: error\n  };\n  return message;\n}\n\nfunction displayWeather(forecast) {\n  var source = document.getElementById(\"weather-template\").innerHTML;\n  var template = Handlebars.compile(source);\n  var html = template(forecast);\n  document.getElementById(\"weather-container\").innerHTML = html;\n}\n\nfunction displayErrorMessage(message) {\n  var source = document.getElementById(\"message-template\").innerHTML;\n  var template = Handlebars.compile(source);\n  var html = template(message);\n  document.getElementById(\"message-container\").innerHTML = html;\n}\n\nexports.extractForecast = extractForecast;\nexports.extractErrorMessage = extractErrorMessage;\nexports.getWeather = getWeather;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "script.js"
      ],
      "names": [
        "window",
        "onload",
        "input",
        "document",
        "getElementById",
        "addEventListener",
        "onSubmit",
        "e",
        "preventDefault",
        "city",
        "currentTarget",
        "elements",
        "inputfield",
        "value",
        "getWeather",
        "then",
        "response",
        "json",
        "ok",
        "forecast",
        "extractForecast",
        "displayWeather",
        "displayErrorMessage",
        "error",
        "extractErrorMessage",
        "message",
        "url",
        "fetch",
        "name",
        "main",
        "temperature",
        "temp",
        "pressure",
        "humidity",
        "wind",
        "speed",
        "clouds",
        "all",
        "visibility",
        "cod",
        "description",
        "weather",
        "parameters",
        "units",
        "source",
        "innerHTML",
        "template",
        "Handlebars",
        "compile",
        "html",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Jully\\weatherlab1",
      "sourcesContent": [
        "\r\n\r\n\r\n\r\nwindow.onload = () => {\r\n    const input = document.getElementById(\"input-form\");\r\n    input.addEventListener(\"submit\", onSubmit);\r\n};\r\n\r\nfunction onSubmit(e) {\r\n    e.preventDefault();\r\n    const city = e.currentTarget.elements.inputfield.value;\r\n    getWeather(city)\r\n        .then(response => {\r\n            response.json()\r\n            .then(json => {\r\n                if (response.ok) {\r\n                    const forecast = extractForecast(json);\r\n                    displayWeather(forecast);\r\n                    displayErrorMessage(null);\r\n                } else {\r\n                    const error = extractErrorMessage(json.message);\r\n                    //displayErrorMessage(error);\r\n                    //displayWeather(null);\r\n                }\r\n            });\r\n        },\r\n        error => displayErrorMessage(error));\r\n}\r\n\r\nfunction getWeather(city) {\r\n    const url = \"https://api.openweathermap.org/data/2.5/weather?q=\"\r\n        + city +\r\n        \"&appid=e972dcd233bab1ebce419c370711921f&units=metric&lang=en\";\r\n    return fetch(url);\r\n}\r\n\r\nfunction extractForecast(json) {\r\n    const {\r\n        name: city,\r\n        main:\r\n        {\r\n            temp: temperature,\r\n            pressure,\r\n            humidity,\r\n        } = {},\r\n        wind:\r\n        {\r\n            speed: wind,\r\n        } = {},\r\n        clouds:\r\n        {\r\n            all: clouds,\r\n        } = {},\r\n        visibility: visibility,\r\n        cod: cod,\r\n    } = json;\r\n\r\n    let forecast =\r\n    {\r\n        cod: cod,\r\n        city: \"Weather in \" + city,\r\n        description: \" is \" + json.weather[0].description,\r\n        parameters:\r\n            [\r\n                {\r\n                    name: \"Temperature\",\r\n                    value: temperature,\r\n                    units: \"&deg;C\"\r\n                },\r\n                {\r\n                    name: \"Pressure\",\r\n                    value: pressure,\r\n                    units: \"hPa\",\r\n                },\r\n                {\r\n                    name: \"Wind speed\",\r\n                    value: wind,\r\n                    units: \"m/s\",\r\n                },\r\n                {\r\n                    name: \"Humidity\",\r\n                    value: humidity,\r\n                    units: \"%\",\r\n                },\r\n                {\r\n                    name: \"Clouds\",\r\n                    value: clouds,\r\n                    units: \"%\",\r\n                },\r\n                {\r\n                    name: \"Visibility\",\r\n                    value: visibility,\r\n                    units: \"m\",\r\n                },\r\n\r\n            ],\r\n    };\r\n\r\n    return forecast;\r\n}\r\n\r\nfunction extractErrorMessage(error) {\r\n  let message = {\r\n    message: error,\r\n  }\r\n\r\n  return message;\r\n}\r\n\r\nfunction displayWeather(forecast) {\r\n    let source = document.getElementById(\"weather-template\").innerHTML;\r\n    let template = Handlebars.compile(source);\r\n\r\n    let html = template(forecast);\r\n    document.getElementById(\"weather-container\").innerHTML = html;\r\n}\r\n\r\n\r\nfunction displayErrorMessage(message) {\r\n  let source = document.getElementById(\"message-template\").innerHTML;\r\n  let template = Handlebars.compile(source);\r\n\r\n  let html = template(message);\r\n  document.getElementById(\"message-container\").innerHTML = html;\r\n}\r\n\r\nexports.extractForecast = extractForecast;\r\nexports.extractErrorMessage = extractErrorMessage;\r\nexports.getWeather = getWeather;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574016289120
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Jully\\\\weatherlab1\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Jully\\\\weatherlab1\",\"filename\":\"C:\\\\Users\\\\Jully\\\\weatherlab1\\\\work.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Jully\\\\weatherlab1\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Jully\\weatherlab1",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Jully\\weatherlab1",
      "filename": "C:\\Users\\Jully\\weatherlab1\\work.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Jully\\weatherlab1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Jully\\weatherlab1\\work.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Jully\\weatherlab1\\work.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Jully\\weatherlab1",
        "sourceFileName": "work.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar fetch = require(\"node-fetch\");\n\nfunction getWeather(city) {\n  var url = \"https://api.openweathermap.org/data/2.5/weather?q=\" + city + \"&appid=e972dcd233bab1ebce419c370711921f&units=metric&lang=en\";\n  return fetch(url);\n}\n\nfunction extractForecast(json) {\n  var city = json.name,\n      _json$main = json.main;\n  _json$main = _json$main === void 0 ? {} : _json$main;\n  var temperature = _json$main.temp,\n      pressure = _json$main.pressure,\n      humidity = _json$main.humidity,\n      _json$wind = json.wind;\n  _json$wind = _json$wind === void 0 ? {} : _json$wind;\n  var wind = _json$wind.speed,\n      _json$clouds = json.clouds;\n  _json$clouds = _json$clouds === void 0 ? {} : _json$clouds;\n  var clouds = _json$clouds.all,\n      visibility = json.visibility,\n      cod = json.cod;\n  var forecast = {\n    cod: cod,\n    city: \"Weather in \" + city,\n    description: \" is \" + json.weather[0].description,\n    parameters: [{\n      name: \"Temperature\",\n      value: temperature,\n      units: \"&deg;C\"\n    }, {\n      name: \"Pressure\",\n      value: pressure,\n      units: \"hPa\"\n    }, {\n      name: \"Wind speed\",\n      value: wind,\n      units: \"m/s\"\n    }, {\n      name: \"Humidity\",\n      value: humidity,\n      units: \"%\"\n    }, {\n      name: \"Clouds\",\n      value: clouds,\n      units: \"%\"\n    }, {\n      name: \"Visibility\",\n      value: visibility,\n      units: \"m\"\n    }]\n  };\n  return forecast;\n}\n\nfunction extractErrorMessage(error) {\n  var message = {\n    message: error\n  };\n  return message;\n}\n\nfunction displayWeather(forecast) {\n  var source = document.getElementById(\"weather-template\").innerHTML;\n  var template = Handlebars.compile(source);\n  var html = template(forecast);\n  document.getElementById(\"weather-container\").innerHTML = html;\n}\n\nfunction displayErrorMessage(message) {\n  var source = document.getElementById(\"message-template\").innerHTML;\n  var template = Handlebars.compile(source);\n  var html = template(message);\n  document.getElementById(\"message-container\").innerHTML = html;\n}\n\nexports.extractForecast = extractForecast;\nexports.extractErrorMessage = extractErrorMessage;\nexports.getWeather = getWeather;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndvcmsuanMiXSwibmFtZXMiOlsiZmV0Y2giLCJyZXF1aXJlIiwiZ2V0V2VhdGhlciIsImNpdHkiLCJ1cmwiLCJleHRyYWN0Rm9yZWNhc3QiLCJqc29uIiwibmFtZSIsIm1haW4iLCJ0ZW1wZXJhdHVyZSIsInRlbXAiLCJwcmVzc3VyZSIsImh1bWlkaXR5Iiwid2luZCIsInNwZWVkIiwiY2xvdWRzIiwiYWxsIiwidmlzaWJpbGl0eSIsImNvZCIsImZvcmVjYXN0IiwiZGVzY3JpcHRpb24iLCJ3ZWF0aGVyIiwicGFyYW1ldGVycyIsInZhbHVlIiwidW5pdHMiLCJleHRyYWN0RXJyb3JNZXNzYWdlIiwiZXJyb3IiLCJtZXNzYWdlIiwiZGlzcGxheVdlYXRoZXIiLCJzb3VyY2UiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiaW5uZXJIVE1MIiwidGVtcGxhdGUiLCJIYW5kbGViYXJzIiwiY29tcGlsZSIsImh0bWwiLCJkaXNwbGF5RXJyb3JNZXNzYWdlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxZQUFELENBQXJCOztBQUVBLFNBQVNDLFVBQVQsQ0FBb0JDLElBQXBCLEVBQTBCO0FBQ3RCLE1BQU1DLEdBQUcsR0FBRyx1REFDTkQsSUFETSxHQUVSLDhEQUZKO0FBR0EsU0FBT0gsS0FBSyxDQUFDSSxHQUFELENBQVo7QUFDSDs7QUFFRCxTQUFTQyxlQUFULENBQXlCQyxJQUF6QixFQUErQjtBQUFBLE1BRWpCSCxJQUZpQixHQW1CdkJHLElBbkJ1QixDQUV2QkMsSUFGdUI7QUFBQSxtQkFtQnZCRCxJQW5CdUIsQ0FHdkJFLElBSHVCO0FBQUEsdUNBUW5CLEVBUm1CO0FBQUEsTUFLYkMsV0FMYSxjQUtuQkMsSUFMbUI7QUFBQSxNQU1uQkMsUUFObUIsY0FNbkJBLFFBTm1CO0FBQUEsTUFPbkJDLFFBUG1CLGNBT25CQSxRQVBtQjtBQUFBLG1CQW1CdkJOLElBbkJ1QixDQVN2Qk8sSUFUdUI7QUFB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XEp1bGx5XFx3ZWF0aGVybGFiMSIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGZldGNoID0gcmVxdWlyZShcIm5vZGUtZmV0Y2hcIik7XHJcblxyXG5mdW5jdGlvbiBnZXRXZWF0aGVyKGNpdHkpIHtcclxuICAgIGNvbnN0IHVybCA9IFwiaHR0cHM6Ly9hcGkub3BlbndlYXRoZXJtYXAub3JnL2RhdGEvMi41L3dlYXRoZXI/cT1cIlxyXG4gICAgICAgICsgY2l0eSArXHJcbiAgICAgICAgXCImYXBwaWQ9ZTk3MmRjZDIzM2JhYjFlYmNlNDE5YzM3MDcxMTkyMWYmdW5pdHM9bWV0cmljJmxhbmc9ZW5cIjtcclxuICAgIHJldHVybiBmZXRjaCh1cmwpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBleHRyYWN0Rm9yZWNhc3QoanNvbikge1xyXG4gICAgY29uc3Qge1xyXG4gICAgICAgIG5hbWU6IGNpdHksXHJcbiAgICAgICAgbWFpbjpcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHRlbXA6IHRlbXBlcmF0dXJlLFxyXG4gICAgICAgICAgICBwcmVzc3VyZSxcclxuICAgICAgICAgICAgaHVtaWRpdHksXHJcbiAgICAgICAgfSA9IHt9LFxyXG4gICAgICAgIHdpbmQ6XHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBzcGVlZDogd2luZCxcclxuICAgICAgICB9ID0ge30sXHJcbiAgICAgICAgY2xvdWRzOlxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgYWxsOiBjbG91ZHMsXHJcbiAgICAgICAgfSA9IHt9LFxyXG4gICAgICAgIHZpc2liaWxpdHk6IHZpc2liaWxpdHksXHJcbiAgICAgICAgY29kOiBjb2QsXHJcbiAgICB9ID0ganNvbjtcclxuXHJcbiAgICBsZXQgZm9yZWNhc3QgPVxyXG4gICAge1xyXG4gICAgICAgIGNvZDogY29kLFxyXG4gICAgICAgIGNpdHk6IFwiV2VhdGhlciBpbiBcIiArIGNpdHksXHJcbiAgICAgICAgZGVzY3JpcHRpb246IFwiIGlzIFwiICsganNvbi53ZWF0aGVyWzBdLmRlc2NyaXB0aW9uLFxyXG4gICAgICAgIHBhcmFtZXRlcnM6XHJcbiAgICAgICAgICAgIFtcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIlRlbXBlcmF0dXJlXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHRlbXBlcmF0dXJlLFxyXG4gICAgICAgICAgICAgICAgICAgIHVuaXRzOiBcIiZkZWc7Q1wiXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiUHJlc3N1cmVcIixcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogcHJlc3N1cmUsXHJcbiAgICAgICAgICAgICAgICAgICAgdW5pdHM6IFwiaFBhXCIsXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiV2luZCBzcGVlZFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiB3aW5kLFxyXG4gICAgICAgICAgICAgICAgICAgIHVuaXRzOiBcIm0vc1wiLFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkh1bWlkaXR5XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGh1bWlkaXR5LFxyXG4gICAgICAgICAgICAgICAgICAgIHVuaXRzOiBcIiVcIixcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJDbG91ZHNcIixcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogY2xvdWRzLFxyXG4gICAgICAgICAgICAgICAgICAgIHVuaXRzOiBcIiVcIixcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJWaXNpYmlsaXR5XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHZpc2liaWxpdHksXHJcbiAgICAgICAgICAgICAgICAgICAgdW5pdHM6IFwibVwiLFxyXG4gICAgICAgICAgICAgICAgfSxcclxuXHJcbiAgICAgICAgICAgIF0sXHJcbiAgICB9O1xyXG5cclxuICAgIHJldHVybiBmb3JlY2FzdDtcclxufVxyXG5cclxuZnVuY3Rpb24gZXh0cmFjdEVycm9yTWVzc2FnZShlcnJvcikge1xyXG4gIGxldCBtZXNzYWdlID0ge1xyXG4gICAgbWVzc2FnZTogZXJyb3IsXHJcbiAgfVxyXG5cclxuICByZXR1cm4gbWVzc2FnZTtcclxufVxyXG5cclxuZnVuY3Rpb24gZGlzcGxheVdlYXRoZXIoZm9yZWNhc3QpIHtcclxuICAgIGxldCBzb3VyY2UgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIndlYXRoZXItdGVtcGxhdGVcIikuaW5uZXJIVE1MO1xyXG4gICAgbGV0IHRlbXBsYXRlID0gSGFuZGxlYmFycy5jb21waWxlKHNvdXJjZSk7XHJcblxyXG4gICAgbGV0IGh0bWwgPSB0ZW1wbGF0ZShmb3JlY2FzdCk7XHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIndlYXRoZXItY29udGFpbmVyXCIpLmlubmVySFRNTCA9IGh0bWw7XHJcbn1cclxuXHJcblxyXG5mdW5jdGlvbiBkaXNwbGF5RXJyb3JNZXNzYWdlKG1lc3NhZ2UpIHtcclxuICBsZXQgc291cmNlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtZXNzYWdlLXRlbXBsYXRlXCIpLmlubmVySFRNTDtcclxuICBsZXQgdGVtcGxhdGUgPSBIYW5kbGViYXJzLmNvbXBpbGUoc291cmNlKTtcclxuXHJcbiAgbGV0IGh0bWwgPSB0ZW1wbGF0ZShtZXNzYWdlKTtcclxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1lc3NhZ2UtY29udGFpbmVyXCIpLmlubmVySFRNTCA9IGh0bWw7XHJcbn1cclxuXHJcbmV4cG9ydHMuZXh0cmFjdEZvcmVjYXN0ID0gZXh0cmFjdEZvcmVjYXN0O1xyXG5leHBvcnRzLmV4dHJhY3RFcnJvck1lc3NhZ2UgPSBleHRyYWN0RXJyb3JNZXNzYWdlO1xyXG5leHBvcnRzLmdldFdlYXRoZXIgPSBnZXRXZWF0aGVyO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "work.js"
      ],
      "names": [
        "fetch",
        "require",
        "getWeather",
        "city",
        "url",
        "extractForecast",
        "json",
        "name",
        "main",
        "temperature",
        "temp",
        "pressure",
        "humidity",
        "wind",
        "speed",
        "clouds",
        "all",
        "visibility",
        "cod",
        "forecast",
        "description",
        "weather",
        "parameters",
        "value",
        "units",
        "extractErrorMessage",
        "error",
        "message",
        "displayWeather",
        "source",
        "document",
        "getElementById",
        "innerHTML",
        "template",
        "Handlebars",
        "compile",
        "html",
        "displayErrorMessage",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Jully\\weatherlab1",
      "sourcesContent": [
        "const fetch = require(\"node-fetch\");\r\n\r\nfunction getWeather(city) {\r\n    const url = \"https://api.openweathermap.org/data/2.5/weather?q=\"\r\n        + city +\r\n        \"&appid=e972dcd233bab1ebce419c370711921f&units=metric&lang=en\";\r\n    return fetch(url);\r\n}\r\n\r\nfunction extractForecast(json) {\r\n    const {\r\n        name: city,\r\n        main:\r\n        {\r\n            temp: temperature,\r\n            pressure,\r\n            humidity,\r\n        } = {},\r\n        wind:\r\n        {\r\n            speed: wind,\r\n        } = {},\r\n        clouds:\r\n        {\r\n            all: clouds,\r\n        } = {},\r\n        visibility: visibility,\r\n        cod: cod,\r\n    } = json;\r\n\r\n    let forecast =\r\n    {\r\n        cod: cod,\r\n        city: \"Weather in \" + city,\r\n        description: \" is \" + json.weather[0].description,\r\n        parameters:\r\n            [\r\n                {\r\n                    name: \"Temperature\",\r\n                    value: temperature,\r\n                    units: \"&deg;C\"\r\n                },\r\n                {\r\n                    name: \"Pressure\",\r\n                    value: pressure,\r\n                    units: \"hPa\",\r\n                },\r\n                {\r\n                    name: \"Wind speed\",\r\n                    value: wind,\r\n                    units: \"m/s\",\r\n                },\r\n                {\r\n                    name: \"Humidity\",\r\n                    value: humidity,\r\n                    units: \"%\",\r\n                },\r\n                {\r\n                    name: \"Clouds\",\r\n                    value: clouds,\r\n                    units: \"%\",\r\n                },\r\n                {\r\n                    name: \"Visibility\",\r\n                    value: visibility,\r\n                    units: \"m\",\r\n                },\r\n\r\n            ],\r\n    };\r\n\r\n    return forecast;\r\n}\r\n\r\nfunction extractErrorMessage(error) {\r\n  let message = {\r\n    message: error,\r\n  }\r\n\r\n  return message;\r\n}\r\n\r\nfunction displayWeather(forecast) {\r\n    let source = document.getElementById(\"weather-template\").innerHTML;\r\n    let template = Handlebars.compile(source);\r\n\r\n    let html = template(forecast);\r\n    document.getElementById(\"weather-container\").innerHTML = html;\r\n}\r\n\r\n\r\nfunction displayErrorMessage(message) {\r\n  let source = document.getElementById(\"message-template\").innerHTML;\r\n  let template = Handlebars.compile(source);\r\n\r\n  let html = template(message);\r\n  document.getElementById(\"message-container\").innerHTML = html;\r\n}\r\n\r\nexports.extractForecast = extractForecast;\r\nexports.extractErrorMessage = extractErrorMessage;\r\nexports.getWeather = getWeather;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574017508090
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Jully\\\\weatherlab1\\\\scripts\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Jully\\\\weatherlab1\",\"filename\":\"C:\\\\Users\\\\Jully\\\\weatherlab1\\\\scripts\\\\work.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Jully\\\\weatherlab1\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Jully\\weatherlab1\\scripts",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Jully\\weatherlab1",
      "filename": "C:\\Users\\Jully\\weatherlab1\\scripts\\work.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Jully\\weatherlab1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Jully\\weatherlab1\\scripts\\work.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Jully\\weatherlab1\\scripts\\work.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Jully\\weatherlab1\\scripts",
        "sourceFileName": "work.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getWeather = getWeather;\nexports.extractForecast = extractForecast;\nexports.extractErrorMessage = extractErrorMessage;\nexports.displayWeather = displayWeather;\nexports.displayErrorMessage = displayErrorMessage;\n\nvar fetch = require('node-fetch');\n\nfunction getWeather(city) {\n  var url = \"https://api.openweathermap.org/data/2.5/weather?q=\" + city + \"&appid=e972dcd233bab1ebce419c370711921f&units=metric&lang=en\";\n  return fetch(url);\n}\n\nfunction extractForecast(json) {\n  var city = json.name,\n      _json$main = json.main;\n  _json$main = _json$main === void 0 ? {} : _json$main;\n  var temperature = _json$main.temp,\n      pressure = _json$main.pressure,\n      humidity = _json$main.humidity,\n      _json$wind = json.wind;\n  _json$wind = _json$wind === void 0 ? {} : _json$wind;\n  var wind = _json$wind.speed,\n      _json$clouds = json.clouds;\n  _json$clouds = _json$clouds === void 0 ? {} : _json$clouds;\n  var clouds = _json$clouds.all,\n      visibility = json.visibility,\n      cod = json.cod;\n  var forecast = {\n    cod: cod,\n    city: \"Weather in \" + city,\n    description: \" is \" + json.weather[0].description,\n    parameters: [{\n      name: \"Temperature\",\n      value: temperature,\n      units: \"&deg;C\"\n    }, {\n      name: \"Pressure\",\n      value: pressure,\n      units: \"hPa\"\n    }, {\n      name: \"Wind speed\",\n      value: wind,\n      units: \"m/s\"\n    }, {\n      name: \"Humidity\",\n      value: humidity,\n      units: \"%\"\n    }, {\n      name: \"Clouds\",\n      value: clouds,\n      units: \"%\"\n    }, {\n      name: \"Visibility\",\n      value: visibility,\n      units: \"m\"\n    }]\n  };\n  return forecast;\n}\n\nfunction extractErrorMessage(error) {\n  var message = {\n    message: error\n  };\n  return message;\n}\n\nfunction displayWeather(forecast) {\n  var source = document.getElementById(\"weather-template\").innerHTML;\n  var template = Handlebars.compile(source);\n  var html = template(forecast);\n  document.getElementById(\"weather-container\").innerHTML = html;\n}\n\nfunction displayErrorMessage(message) {\n  var source = document.getElementById(\"message-template\").innerHTML;\n  var template = Handlebars.compile(source);\n  var html = template(message);\n  document.getElementById(\"message-container\").innerHTML = html;\n} //exports.extractForecast = extractForecast;\n//exports.extractErrorMessage = extractErrorMessage;\n//exports.getWeather = getWeather;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndvcmsuanMiXSwibmFtZXMiOlsiZmV0Y2giLCJyZXF1aXJlIiwiZ2V0V2VhdGhlciIsImNpdHkiLCJ1cmwiLCJleHRyYWN0Rm9yZWNhc3QiLCJqc29uIiwibmFtZSIsIm1haW4iLCJ0ZW1wZXJhdHVyZSIsInRlbXAiLCJwcmVzc3VyZSIsImh1bWlkaXR5Iiwid2luZCIsInNwZWVkIiwiY2xvdWRzIiwiYWxsIiwidmlzaWJpbGl0eSIsImNvZCIsImZvcmVjYXN0IiwiZGVzY3JpcHRpb24iLCJ3ZWF0aGVyIiwicGFyYW1ldGVycyIsInZhbHVlIiwidW5pdHMiLCJleHRyYWN0RXJyb3JNZXNzYWdlIiwiZXJyb3IiLCJtZXNzYWdlIiwiZGlzcGxheVdlYXRoZXIiLCJzb3VyY2UiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiaW5uZXJIVE1MIiwidGVtcGxhdGUiLCJIYW5kbGViYXJzIiwiY29tcGlsZSIsImh0bWwiLCJkaXNwbGF5RXJyb3JNZXNzYWdlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBLElBQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLFlBQUQsQ0FBckI7O0FBRU8sU0FBU0MsVUFBVCxDQUFvQkMsSUFBcEIsRUFBMEI7QUFDN0IsTUFBTUMsR0FBRyxHQUFHLHVEQUNORCxJQURNLEdBRVIsOERBRko7QUFHQSxTQUFPSCxLQUFLLENBQUNJLEdBQUQsQ0FBWjtBQUNIOztBQUVNLFNBQVNDLGVBQVQsQ0FBeUJDLElBQXpCLEVBQStCO0FBQUEsTUFFeEJILElBRndCLEdBbUI5QkcsSUFuQjhCLENBRTlCQyxJQUY4QjtBQUFBLG1CQW1COUJELElBbkI4QixDQUc5QkUsSUFIOEI7QUFBQSx1Q0FRMUIsRUFSMEI7QUFBQSxNQUtwQkMsV0FMb0IsY0FLMUJDLElBTDBCO0FBQUEsTUFNMUJDLFFBTjBCLGNBTTFCQSxRQU4wQjtBQUFBLE1BTzFCQyxRQVAwQixjQU8xQkEsUUFQMEI7QUFBQSxtQkFtQjlCTixJQW5COEIsQ0FTOUJPLElBVDhCO0FBQUEsdUNBWTFCLEVBWjBCO0FBQUEsTUFXbkJBLElBWG1CLGNBVzFCQyxLQVgwQjtBQUFBLHFCQW1COUJSLElBbkI4QixDQWE5QlMsTUFiOEI7QUFBQSwyQ0FnQjFCLEVBaEIwQjtBQUFBLE1BZXJCQSxNQWZxQixnQkFlMUJDLEdBZjBCO0FBQUEsTUFpQmxCQyxVQWpCa0IsR0FtQjlCWCxJQW5COEIsQ0FpQjlCVyxVQWpCOEI7QUFBQSxNQWtCekJDLEdBbEJ5QixHQW1COUJaLElBbkI4QixDQWtCOUJZLEdBbEI4QjtBQXFCbEMsTUFBSUMsUUFBUSxHQUNaO0FBQ0lELElBQUFBLEdBQUcsRUFBRUEsR0FEVDtBQUVJZixJQUFBQSxJQUFJLEVBQUUsZ0JBQWdCQSxJQUYxQjtBQUdJaUIsSUFBQUEsV0FBVyxFQUFFLFNBQVNkLElBQUksQ0FBQ2UsT0FBTCxDQUFhLENBQWIsRUFBZ0JELFdBSDFDO0FBSUlFLElBQUFBLFVBQVUsRUFDTixDQUNJO0FBQ0lmLE1BQUFBLElBQUksRUFBRSxhQURWO0FBRUlnQixNQUFBQSxLQUFLLEVBQUVkLFdBRlg7QUFHSWUsTUFBQUEsS0FBSyxFQUFFO0FBSFgsS0FESixFQU1JO0FBQ0lqQixNQUFBQSxJQUFJLEVBQUUsVUFEVjtBQUVJZ0IsTUFBQUEsS0FBSyxFQUFFWixRQUZYO0FBR0lhLE1BQUFBLEtBQUssRUFBRTtBQUhYLEtBTkosRUFXSTtBQUNJakIsTUFBQUEsSUFBSSxFQUFFLFlBRFY7QUFFSWdCLE1BQUFBLEtBQUssRUFBRVYsSUFGWDtBQUdJVyxNQUFBQSxLQUFLLEVBQUU7QUFIWCxLQVhKLEVBZ0JJO0FBQ0lqQixNQUFBQSxJQUFJLEVBQUUsVUFEVjtBQUVJZ0IsTUFBQUEsS0FBSyxFQUFFWCxRQUZYO0FBR0lZLE1BQUFBLEtBQUssRUFBRTtBQUhYLEtBaEJKLEVBcUJJO0FBQ0lqQixNQUFBQSxJQUFJLEVBQUUsUUFEVjtBQUVJZ0IsTUFBQUEsS0FBSyxFQUFFUixNQUZYO0FBR0lTLE1BQUFBLEtBQUssRUFBRTtBQUhYLEtBckJKLEVBMEJJO0FBQ0lqQixNQUFBQSxJQUFJLEVBQUUsWUFEVjtBQUVJZ0IsTUFBQUEsS0FBSyxFQUFFTixVQUZYO0FBR0lPLE1BQUFBLEtBQUssRUFBRTtBQUhYLEtBMUJKO0FBTFIsR0FEQTtBQXlDQSxTQUFPTCxRQUFQO0FBQ0g7O0FBRU0sU0FBU00sbUJBQVQsQ0FBNkJDLEtBQTdCLEVBQW9DO0FBQ3pDLE1BQUlDLE9BQU8sR0FBRztBQUNaQSxJQUFBQSxPQUFPLEVBQUVEO0FBREcsR0FBZDtBQUlBLFNBQU9DLE9BQVA7QUFDRDs7QUFFTSxTQUFTQyxjQUFULENBQXdCVCxRQUF4QixFQUFrQztBQUNyQyxNQUFJVSxNQUFNLEdBQUdDLFFBQVEsQ0FBQ0MsY0FBVCxDQUF3QixrQkFBeEIsRUFBNENDLFNBQXpEO0FBQ0EsTUFBSUMsUUFBUSxHQUFHQyxVQUFVLENBQUNDLE9BQVgsQ0FBbUJOLE1BQW5CLENBQWY7QUFFQSxNQUFJTyxJQUFJLEdBQUdILFFBQVEsQ0FBQ2QsUUFBRCxDQUFuQjtBQUNBVyxFQUFBQSxRQUFRLENBQUNDLGNBQVQsQ0FBd0IsbUJBQXhCLEVBQTZDQyxTQUE3QyxHQUF5REksSUFBekQ7QUFDSDs7QUFHTSxTQUFTQyxtQkFBVCxDQUE2QlYsT0FBN0IsRUFBc0M7QUFDM0MsTUFBSUUsTUFBTSxHQUFHQyxRQUFRLENBQUNDLGNBQVQsQ0FBd0Isa0JBQXhCLEVBQTRDQyxTQUF6RDtBQUNBLE1BQUlDLFFBQVEsR0FBR0MsVUFBVSxDQUFDQyxPQUFYLENBQW1CTixNQUFuQixDQUFmO0FBRUEsTUFBSU8sSUFBSSxHQUFHSCxRQUFRLENBQUNOLE9BQUQsQ0FBbkI7QUFDQUcsRUFBQUEsUUFBUSxDQUFDQyxjQUFULENBQXdCLG1CQUF4QixFQUE2Q0MsU0FBN0MsR0FBeURJLElBQXpEO0FBQ0QsQyxDQUVEO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEp1bGx5XFx3ZWF0aGVybGFiMVxcc2NyaXB0cyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGZldGNoID0gcmVxdWlyZSgnbm9kZS1mZXRjaCcpO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdldFdlYXRoZXIoY2l0eSkge1xyXG4gICAgY29uc3QgdXJsID0gXCJodHRwczovL2FwaS5vcGVud2VhdGhlcm1hcC5vcmcvZGF0YS8yLjUvd2VhdGhlcj9xPVwiXHJcbiAgICAgICAgKyBjaXR5ICtcclxuICAgICAgICBcIiZhcHBpZD1lOTcyZGNkMjMzYmFiMWViY2U0MTljMzcwNzExOTIxZiZ1bml0cz1tZXRyaWMmbGFuZz1lblwiO1xyXG4gICAgcmV0dXJuIGZldGNoKHVybCk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBleHRyYWN0Rm9yZWNhc3QoanNvbikge1xyXG4gICAgY29uc3Qge1xyXG4gICAgICAgIG5hbWU6IGNpdHksXHJcbiAgICAgICAgbWFpbjpcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHRlbXA6IHRlbXBlcmF0dXJlLFxyXG4gICAgICAgICAgICBwcmVzc3VyZSxcclxuICAgICAgICAgICAgaHVtaWRpdHksXHJcbiAgICAgICAgfSA9IHt9LFxyXG4gICAgICAgIHdpbmQ6XHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBzcGVlZDogd2luZCxcclxuICAgICAgICB9ID0ge30sXHJcbiAgICAgICAgY2xvdWRzOlxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgYWxsOiBjbG91ZHMsXHJcbiAgICAgICAgfSA9IHt9LFxyXG4gICAgICAgIHZpc2liaWxpdHk6IHZpc2liaWxpdHksXHJcbiAgICAgICAgY29kOiBjb2QsXHJcbiAgICB9ID0ganNvbjtcclxuXHJcbiAgICBsZXQgZm9yZWNhc3QgPVxyXG4gICAge1xyXG4gICAgICAgIGNvZDogY29kLFxyXG4gICAgICAgIGNpdHk6IFwiV2VhdGhlciBpbiBcIiArIGNpdHksXHJcbiAgICAgICAgZGVzY3JpcHRpb246IFwiIGlzIFwiICsganNvbi53ZWF0aGVyWzBdLmRlc2NyaXB0aW9uLFxyXG4gICAgICAgIHBhcmFtZXRlcnM6XHJcbiAgICAgICAgICAgIFtcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIlRlbXBlcmF0dXJlXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHRlbXBlcmF0dXJlLFxyXG4gICAgICAgICAgICAgICAgICAgIHVuaXRzOiBcIiZkZWc7Q1wiXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiUHJlc3N1cmVcIixcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogcHJlc3N1cmUsXHJcbiAgICAgICAgICAgICAgICAgICAgdW5pdHM6IFwiaFBhXCIsXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiV2luZCBzcGVlZFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiB3aW5kLFxyXG4gICAgICAgICAgICAgICAgICAgIHVuaXRzOiBcIm0vc1wiLFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkh1bWlkaXR5XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGh1bWlkaXR5LFxyXG4gICAgICAgICAgICAgICAgICAgIHVuaXRzOiBcIiVcIixcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJDbG91ZHNcIixcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogY2xvdWRzLFxyXG4gICAgICAgICAgICAgICAgICAgIHVuaXRzOiBcIiVcIixcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJWaXNpYmlsaXR5XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHZpc2liaWxpdHksXHJcbiAgICAgICAgICAgICAgICAgICAgdW5pdHM6IFwibVwiLFxyXG4gICAgICAgICAgICAgICAgfSxcclxuXHJcbiAgICAgICAgICAgIF0sXHJcbiAgICB9O1xyXG5cclxuICAgIHJldHVybiBmb3JlY2FzdDtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGV4dHJhY3RFcnJvck1lc3NhZ2UoZXJyb3IpIHtcclxuICBsZXQgbWVzc2FnZSA9IHtcclxuICAgIG1lc3NhZ2U6IGVycm9yLFxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIG1lc3NhZ2U7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBkaXNwbGF5V2VhdGhlcihmb3JlY2FzdCkge1xyXG4gICAgbGV0IHNvdXJjZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwid2VhdGhlci10ZW1wbGF0ZVwiKS5pbm5lckhUTUw7XHJcbiAgICBsZXQgdGVtcGxhdGUgPSBIYW5kbGViYXJzLmNvbXBpbGUoc291cmNlKTtcclxuXHJcbiAgICBsZXQgaHRtbCA9IHRlbXBsYXRlKGZvcmVjYXN0KTtcclxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwid2VhdGhlci1jb250YWluZXJcIikuaW5uZXJIVE1MID0gaHRtbDtcclxufVxyXG5cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBkaXNwbGF5RXJyb3JNZXNzYWdlKG1lc3NhZ2UpIHtcclxuICBsZXQgc291cmNlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtZXNzYWdlLXRlbXBsYXRlXCIpLmlubmVySFRNTDtcclxuICBsZXQgdGVtcGxhdGUgPSBIYW5kbGViYXJzLmNvbXBpbGUoc291cmNlKTtcclxuXHJcbiAgbGV0IGh0bWwgPSB0ZW1wbGF0ZShtZXNzYWdlKTtcclxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1lc3NhZ2UtY29udGFpbmVyXCIpLmlubmVySFRNTCA9IGh0bWw7XHJcbn1cclxuXHJcbi8vZXhwb3J0cy5leHRyYWN0Rm9yZWNhc3QgPSBleHRyYWN0Rm9yZWNhc3Q7XHJcbi8vZXhwb3J0cy5leHRyYWN0RXJyb3JNZXNzYWdlID0gZXh0cmFjdEVycm9yTWVzc2FnZTtcclxuLy9leHBvcnRzLmdldFdlYXRoZXIgPSBnZXRXZWF0aGVyO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "work.js"
      ],
      "names": [
        "fetch",
        "require",
        "getWeather",
        "city",
        "url",
        "extractForecast",
        "json",
        "name",
        "main",
        "temperature",
        "temp",
        "pressure",
        "humidity",
        "wind",
        "speed",
        "clouds",
        "all",
        "visibility",
        "cod",
        "forecast",
        "description",
        "weather",
        "parameters",
        "value",
        "units",
        "extractErrorMessage",
        "error",
        "message",
        "displayWeather",
        "source",
        "document",
        "getElementById",
        "innerHTML",
        "template",
        "Handlebars",
        "compile",
        "html",
        "displayErrorMessage"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Jully\\weatherlab1\\scripts",
      "sourcesContent": [
        "const fetch = require('node-fetch');\r\n\r\nexport function getWeather(city) {\r\n    const url = \"https://api.openweathermap.org/data/2.5/weather?q=\"\r\n        + city +\r\n        \"&appid=e972dcd233bab1ebce419c370711921f&units=metric&lang=en\";\r\n    return fetch(url);\r\n}\r\n\r\nexport function extractForecast(json) {\r\n    const {\r\n        name: city,\r\n        main:\r\n        {\r\n            temp: temperature,\r\n            pressure,\r\n            humidity,\r\n        } = {},\r\n        wind:\r\n        {\r\n            speed: wind,\r\n        } = {},\r\n        clouds:\r\n        {\r\n            all: clouds,\r\n        } = {},\r\n        visibility: visibility,\r\n        cod: cod,\r\n    } = json;\r\n\r\n    let forecast =\r\n    {\r\n        cod: cod,\r\n        city: \"Weather in \" + city,\r\n        description: \" is \" + json.weather[0].description,\r\n        parameters:\r\n            [\r\n                {\r\n                    name: \"Temperature\",\r\n                    value: temperature,\r\n                    units: \"&deg;C\"\r\n                },\r\n                {\r\n                    name: \"Pressure\",\r\n                    value: pressure,\r\n                    units: \"hPa\",\r\n                },\r\n                {\r\n                    name: \"Wind speed\",\r\n                    value: wind,\r\n                    units: \"m/s\",\r\n                },\r\n                {\r\n                    name: \"Humidity\",\r\n                    value: humidity,\r\n                    units: \"%\",\r\n                },\r\n                {\r\n                    name: \"Clouds\",\r\n                    value: clouds,\r\n                    units: \"%\",\r\n                },\r\n                {\r\n                    name: \"Visibility\",\r\n                    value: visibility,\r\n                    units: \"m\",\r\n                },\r\n\r\n            ],\r\n    };\r\n\r\n    return forecast;\r\n}\r\n\r\nexport function extractErrorMessage(error) {\r\n  let message = {\r\n    message: error,\r\n  }\r\n\r\n  return message;\r\n}\r\n\r\nexport function displayWeather(forecast) {\r\n    let source = document.getElementById(\"weather-template\").innerHTML;\r\n    let template = Handlebars.compile(source);\r\n\r\n    let html = template(forecast);\r\n    document.getElementById(\"weather-container\").innerHTML = html;\r\n}\r\n\r\n\r\nexport function displayErrorMessage(message) {\r\n  let source = document.getElementById(\"message-template\").innerHTML;\r\n  let template = Handlebars.compile(source);\r\n\r\n  let html = template(message);\r\n  document.getElementById(\"message-container\").innerHTML = html;\r\n}\r\n\r\n//exports.extractForecast = extractForecast;\r\n//exports.extractErrorMessage = extractErrorMessage;\r\n//exports.getWeather = getWeather;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574025111750
  }
}